// <auto-generated />
using System;
using Clinic.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clinic.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Clinic.Src.VO.Attendances.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployerAttendantId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployerDoctorId")
                        .HasColumnType("int");

                    b.Property<int?>("PeopleId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcedureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployerAttendantId");

                    b.HasIndex("EmployerDoctorId");

                    b.HasIndex("PeopleId");

                    b.HasIndex("ProcedureId");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("Clinic.Src.VO.Employers.Employer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployerTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Enrollment")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployerTypeId");

                    b.ToTable("Employer");
                });

            modelBuilder.Entity("Clinic.Src.VO.Employers.EmployerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployerType");
                });

            modelBuilder.Entity("Clinic.Src.VO.Peoples.People", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Clinic.Src.VO.Procedures.Procedure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Decryption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Procedure");
                });

            modelBuilder.Entity("Clinic.Src.VO.Attendances.Attendance", b =>
                {
                    b.HasOne("Clinic.Src.VO.Employers.Employer", "EmployerAttendant")
                        .WithMany()
                        .HasForeignKey("EmployerAttendantId");

                    b.HasOne("Clinic.Src.VO.Employers.Employer", "EmployerDoctor")
                        .WithMany()
                        .HasForeignKey("EmployerDoctorId");

                    b.HasOne("Clinic.Src.VO.Peoples.People", "People")
                        .WithMany()
                        .HasForeignKey("PeopleId");

                    b.HasOne("Clinic.Src.VO.Procedures.Procedure", "Procedure")
                        .WithMany()
                        .HasForeignKey("ProcedureId");

                    b.Navigation("EmployerAttendant");

                    b.Navigation("EmployerDoctor");

                    b.Navigation("People");

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("Clinic.Src.VO.Employers.Employer", b =>
                {
                    b.HasOne("Clinic.Src.VO.Employers.EmployerType", "EmployerType")
                        .WithMany()
                        .HasForeignKey("EmployerTypeId");

                    b.Navigation("EmployerType");
                });
#pragma warning restore 612, 618
        }
    }
}
